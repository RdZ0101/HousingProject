{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\promi\\\\OneDrive\\\\Documents\\\\GitHub\\\\HousingProject\\\\housingapp\\\\src\\\\GeneratedSalesPrediction.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PostcodePriceBarChart from './PostcodePriceBarChart';\nimport RoomCountLineChart from './RoomCountLineChart';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GenSalesPred() {\n  _s();\n  var _location$state, _location$state2, _location$state3, _location$state4;\n  const location = useLocation();\n  const prediction = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.prediction;\n  const postcode = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.postcode;\n  const rooms = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.rooms;\n  const houseType = (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.houseType;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sales Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), prediction !== undefined ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The predicted sales price is: $\", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No prediction available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), postcode && rooms && houseType !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predicted Price Comparison by Suburb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PostcodePriceBarChart, {\n        userPostcode: postcode,\n        userRooms: rooms,\n        userHouseType: houseType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predicted Price vs. Number of Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RoomCountLineChart, {\n        userPostcode: postcode,\n        houseType: houseType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Insufficient data to display charts. Please provide postcode, room count, and house type.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(GenSalesPred, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = GenSalesPred;\nexport default GenSalesPred;\nvar _c;\n$RefreshReg$(_c, \"GenSalesPred\");","map":{"version":3,"names":["React","useLocation","PostcodePriceBarChart","RoomCountLineChart","jsxDEV","_jsxDEV","Fragment","_Fragment","GenSalesPred","_s","_location$state","_location$state2","_location$state3","_location$state4","location","prediction","state","postcode","rooms","houseType","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined","userPostcode","userRooms","userHouseType","_c","$RefreshReg$"],"sources":["C:/Users/promi/OneDrive/Documents/GitHub/HousingProject/housingapp/src/GeneratedSalesPrediction.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PostcodePriceBarChart from './PostcodePriceBarChart';\nimport RoomCountLineChart from './RoomCountLineChart';\n\nfunction GenSalesPred() {\n    const location = useLocation();\n    const prediction = location.state?.prediction;\n    const postcode = location.state?.postcode;\n    const rooms = location.state?.rooms;\n    const houseType = location.state?.houseType;\n\n    return (\n        <div>\n            <h1>Sales Prediction</h1>\n\n            {prediction !== undefined ? (\n                <p>The predicted sales price is: ${prediction}</p>\n            ) : (\n                <p>No prediction available.</p>\n            )}\n\n            {postcode && rooms && houseType !== undefined ? (\n                <>\n                    <h2>Predicted Price Comparison by Suburb</h2>\n                    <PostcodePriceBarChart \n                        userPostcode={postcode} \n                        userRooms={rooms} \n                        userHouseType={houseType} \n                    />\n\n                    <h2>Predicted Price vs. Number of Rooms</h2>\n                    <RoomCountLineChart \n                        userPostcode={postcode} \n                        houseType={houseType} \n                    />\n                </>\n            ) : (\n                <p>Insufficient data to display charts. Please provide postcode, room count, and house type.</p>\n            )}\n        </div>\n    );\n}\n\nexport default GenSalesPred;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACpB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,UAAU,IAAAL,eAAA,GAAGI,QAAQ,CAACE,KAAK,cAAAN,eAAA,uBAAdA,eAAA,CAAgBK,UAAU;EAC7C,MAAME,QAAQ,IAAAN,gBAAA,GAAGG,QAAQ,CAACE,KAAK,cAAAL,gBAAA,uBAAdA,gBAAA,CAAgBM,QAAQ;EACzC,MAAMC,KAAK,IAAAN,gBAAA,GAAGE,QAAQ,CAACE,KAAK,cAAAJ,gBAAA,uBAAdA,gBAAA,CAAgBM,KAAK;EACnC,MAAMC,SAAS,IAAAN,gBAAA,GAAGC,QAAQ,CAACE,KAAK,cAAAH,gBAAA,uBAAdA,gBAAA,CAAgBM,SAAS;EAE3C,oBACId,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAExBT,UAAU,KAAKU,SAAS,gBACrBpB,OAAA;MAAAe,QAAA,GAAG,iCAA+B,EAACL,UAAU;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAElDnB,OAAA;MAAAe,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjC,EAEAP,QAAQ,IAAIC,KAAK,IAAIC,SAAS,KAAKM,SAAS,gBACzCpB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACIf,OAAA;QAAAe,QAAA,EAAI;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7CnB,OAAA,CAACH,qBAAqB;QAClBwB,YAAY,EAAET,QAAS;QACvBU,SAAS,EAAET,KAAM;QACjBU,aAAa,EAAET;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eAEFnB,OAAA;QAAAe,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CnB,OAAA,CAACF,kBAAkB;QACfuB,YAAY,EAAET,QAAS;QACvBE,SAAS,EAAEA;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA,eACJ,CAAC,gBAEHnB,OAAA;MAAAe,QAAA,EAAG;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAClG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACf,EAAA,CArCQD,YAAY;EAAA,QACAP,WAAW;AAAA;AAAA4B,EAAA,GADvBrB,YAAY;AAuCrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}