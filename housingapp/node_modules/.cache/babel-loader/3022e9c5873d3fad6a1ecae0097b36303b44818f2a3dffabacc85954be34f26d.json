{"ast":null,"code":"var _jsxFileName = \"C:\\\\Innovation project\\\\HousingProject\\\\housingapp\\\\src\\\\MarketAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Polygon } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Melbourne's approximate center\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [-37.8136, 144.9631];\nfunction MarketAnalysis() {\n  _s();\n  const [highSalesSuburbs, setHighSalesSuburbs] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('./highSalesSuburbData.json');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const suburbData = await response.json();\n        setHighSalesSuburbs(suburbData);\n      } catch (error) {\n        console.error(\"Failed to fetch suburb data:\", error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  /*\r\n      // Fetch high-sales suburb data\r\n      useEffect(() => {\r\n          async function fetchData() {\r\n              const data = await fetch('../../highSalesSuburbData.json'); \r\n              const suburbData = await data.json();\r\n              setHighSalesSuburbs(suburbData);\r\n          }\r\n          fetchData();\r\n      }, []);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Market Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: 10,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), highSalesSuburbs.map((suburb, index) => /*#__PURE__*/_jsxDEV(Polygon, {\n        positions: suburb.coordinates,\n        pathOptions: {\n          color: 'red',\n          fillColor: 'red',\n          fillOpacity: 0.4\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(MarketAnalysis, \"B2m5keb9KgCWQ+EvB5EVFu1z7cw=\");\n_c = MarketAnalysis;\nexport default MarketAnalysis;\nvar _c;\n$RefreshReg$(_c, \"MarketAnalysis\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Polygon","jsxDEV","_jsxDEV","center","MarketAnalysis","_s","highSalesSuburbs","setHighSalesSuburbs","fetchData","response","fetch","ok","Error","status","suburbData","json","error","console","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","url","attribution","map","suburb","index","positions","coordinates","pathOptions","color","fillColor","fillOpacity","_c","$RefreshReg$"],"sources":["C:/Innovation project/HousingProject/housingapp/src/MarketAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Polygon } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Melbourne's approximate center\r\nconst center = [-37.8136, 144.9631];\r\n\r\nfunction MarketAnalysis() {\r\n    const [highSalesSuburbs, setHighSalesSuburbs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const response = await fetch('./highSalesSuburbData.json'); \r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n                const suburbData = await response.json();\r\n                setHighSalesSuburbs(suburbData);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch suburb data:\", error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    \r\n\r\n\r\n\r\n\r\n/*\r\n    // Fetch high-sales suburb data\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const data = await fetch('../../highSalesSuburbData.json'); \r\n            const suburbData = await data.json();\r\n            setHighSalesSuburbs(suburbData);\r\n        }\r\n        fetchData();\r\n    }, []);*/\r\n\r\n    return (\r\n        <div style={{ height: '100vh', width: '100%' }}>\r\n            <h1>Market Analysis</h1>\r\n            <MapContainer center={center} zoom={10} style={{ height: '600px', width: '100%' }}>\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\r\n                />\r\n                {highSalesSuburbs.map((suburb, index) => (\r\n                    <Polygon\r\n                        key={index}\r\n                        positions={suburb.coordinates}\r\n                        pathOptions={{ color: 'red', fillColor: 'red', fillOpacity: 0.4 }}\r\n                    />\r\n                ))}\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MarketAnalysis;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,OAAO,QAAQ,eAAe;AAChE,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAG,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC;AAEnC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZ,eAAeY,SAASA,CAAA,EAAG;MACvB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC7D;QACA,MAAMC,UAAU,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACxCR,mBAAmB,CAACO,UAAU,CAAC;MACnC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ;IACAR,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAMV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACIN,OAAA;IAAKgB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC3CnB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA,CAACJ,YAAY;MAACK,MAAM,EAAEA,MAAO;MAACuB,IAAI,EAAE,EAAG;MAACR,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC9EnB,OAAA,CAACH,SAAS;QACN4B,GAAG,EAAC,oDAAoD;QACxDC,WAAW,EAAC;MAAyF;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CAAC,EACDnB,gBAAgB,CAACuB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChC7B,OAAA,CAACF,OAAO;QAEJgC,SAAS,EAAEF,MAAM,CAACG,WAAY;QAC9BC,WAAW,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,SAAS,EAAE,KAAK;UAAEC,WAAW,EAAE;QAAI;MAAE,GAF7DN,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd;AAACpB,EAAA,CApDQD,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAsDvB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}