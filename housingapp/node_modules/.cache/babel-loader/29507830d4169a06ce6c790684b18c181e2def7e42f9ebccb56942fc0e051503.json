{"ast":null,"code":"var _jsxFileName = \"C:\\\\Innovation project\\\\HousingProject\\\\housingapp\\\\src\\\\MarketAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\n\n// Set up the default icon for markers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nL.Marker.prototype.options.icon = L.icon({\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nconst center = [-37.8136, 144.9631]; // Melbourne's approximate center\n\nfunction MarketAnalysis() {\n  _s();\n  const [highSalesSuburbs, setHighSalesSuburbs] = useState([]);\n  const [geoData, setGeoData] = useState(null);\n  const [highRentData, setHighRentData] = useState([]);\n\n  // Fetch high-sales suburb data\n  useEffect(() => {\n    async function fetchSalesData() {\n      try {\n        const response = await fetch('/highSalesSuburbData.json');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const suburbData = await response.json();\n        setHighSalesSuburbs(suburbData);\n      } catch (error) {\n        console.error(\"Failed to fetch high-sales suburb data:\", error);\n      }\n    }\n    async function fetchGeoData() {\n      try {\n        const response = await fetch('/highSalesSuburbs.geojson');\n        const data = await response.json();\n        setGeoData(data);\n      } catch (error) {\n        console.error(\"Error fetching GeoJSON data:\", error);\n      }\n    }\n    async function fetchHighRentData() {\n      try {\n        const response = await fetch('/highRentSuburbsWithCoordinates.json');\n        const data = await response.json();\n        setHighRentData(data);\n        console.log(\"HighRentData suburbs:\", data.map(item => item.Suburb));\n      } catch (error) {\n        console.error(\"Error fetching high-rent data:\", error);\n      }\n    }\n    fetchSalesData();\n    fetchGeoData();\n    fetchHighRentData();\n  }, []);\n\n  // Style function to color suburbs based on rent\n  const styleSuburb = feature => {\n    const suburbName = feature.properties.name ? feature.properties.name.trim().toLowerCase() : null;\n\n    // Skip the feature if the suburb name is missing or empty\n    if (!suburbName) {\n      console.log(\"Skipping feature with missing suburb name.\");\n      return {\n        color: 'gray',\n        weight: 1,\n        fillOpacity: 0.1\n      }; // Default style for missing data\n    }\n    const suburbData = highRentData.find(suburb => suburb.Suburb && suburb.Suburb.trim().toLowerCase() === suburbName);\n\n    // Log matched and unmatched suburbs for better debugging\n    if (suburbData) {\n      console.log(`Match found: ${suburbName}, Rent: ${suburbData.average_rent}`);\n    } else {\n      console.log(`No match for: ${suburbName}`);\n    }\n    const rent = suburbData ? suburbData.average_rent : 0;\n    return {\n      color: rent > 400 ? 'red' : rent > 300 ? 'orange' : 'green',\n      weight: 1,\n      fillOpacity: 0.5\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '20px',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        maxWidth: '800px',\n        textAlign: 'center',\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        overflow: 'hidden',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Average Sales Price of Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center,\n        zoom: 12,\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), highSalesSuburbs.map((suburb, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [suburb.coordinates.lat, suburb.coordinates.lng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: suburb.suburb\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 65\n            }, this), \"Average Sales Price: $\", suburb.average_price.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        maxWidth: '800px',\n        textAlign: 'center',\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Average Rent Prices by Suburb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center,\n        zoom: 10,\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), geoData && /*#__PURE__*/_jsxDEV(GeoJSON, {\n          data: geoData,\n          style: styleSuburb,\n          onEachFeature: (feature, layer) => {\n            const suburbName = feature.properties.name ? feature.properties.name.trim().toLowerCase() : \"\";\n            const suburbData = highRentData.find(suburb => suburb.Suburb && suburb.Suburb.trim().toLowerCase() === suburbName);\n            const rent = suburbData ? suburbData.average_rent : \"No data\";\n            layer.bindPopup(`<strong>${suburbName}</strong><br />Average Rent: $${rent}`);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_s(MarketAnalysis, \"UxVqhiIa3U57/2Rrqk/DAR14nRg=\");\n_c = MarketAnalysis;\nexport default MarketAnalysis;\nvar _c;\n$RefreshReg$(_c, \"MarketAnalysis\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","GeoJSON","L","markerIcon","markerShadow","jsxDEV","_jsxDEV","prototype","options","icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","center","MarketAnalysis","_s","highSalesSuburbs","setHighSalesSuburbs","geoData","setGeoData","highRentData","setHighRentData","fetchSalesData","response","fetch","ok","Error","status","suburbData","json","error","console","fetchGeoData","data","fetchHighRentData","log","map","item","Suburb","styleSuburb","feature","suburbName","properties","name","trim","toLowerCase","color","weight","fillOpacity","find","suburb","average_rent","rent","style","display","justifyContent","flexDirection","alignItems","gap","padding","children","width","maxWidth","textAlign","border","borderRadius","overflow","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","zoom","height","url","attribution","index","position","coordinates","lat","lng","average_price","toLocaleString","onEachFeature","layer","bindPopup","_c","$RefreshReg$"],"sources":["C:/Innovation project/HousingProject/housingapp/src/MarketAnalysis.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\r\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\n// Set up the default icon for markers\r\nL.Marker.prototype.options.icon = L.icon({\r\n    iconUrl: markerIcon,\r\n    shadowUrl: markerShadow,\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41],\r\n});\r\n\r\nconst center = [-37.8136, 144.9631]; // Melbourne's approximate center\r\n\r\nfunction MarketAnalysis() {\r\n    const [highSalesSuburbs, setHighSalesSuburbs] = useState([]);\r\n    const [geoData, setGeoData] = useState(null);\r\n    const [highRentData, setHighRentData] = useState([]);\r\n\r\n    // Fetch high-sales suburb data\r\n    useEffect(() => {\r\n        async function fetchSalesData() {\r\n            try {\r\n                const response = await fetch('/highSalesSuburbData.json');\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n                const suburbData = await response.json();\r\n                setHighSalesSuburbs(suburbData);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch high-sales suburb data:\", error);\r\n            }\r\n        }\r\n\r\n        async function fetchGeoData() {\r\n            try {\r\n                const response = await fetch('/highSalesSuburbs.geojson');\r\n                const data = await response.json();\r\n                setGeoData(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching GeoJSON data:\", error);\r\n            }\r\n        }\r\n\r\n        async function fetchHighRentData() {\r\n            try {\r\n                const response = await fetch('/highRentSuburbsWithCoordinates.json');\r\n                const data = await response.json();\r\n                setHighRentData(data);\r\n                console.log(\"HighRentData suburbs:\", data.map(item => item.Suburb));\r\n            } catch (error) {\r\n                console.error(\"Error fetching high-rent data:\", error);\r\n            }\r\n        }\r\n\r\n        fetchSalesData();\r\n        fetchGeoData();\r\n        fetchHighRentData();\r\n    }, []);\r\n\r\n    // Style function to color suburbs based on rent\r\n    const styleSuburb = (feature) => {\r\n        const suburbName = feature.properties.name ? feature.properties.name.trim().toLowerCase() : null;\r\n    \r\n        // Skip the feature if the suburb name is missing or empty\r\n        if (!suburbName) {\r\n            console.log(\"Skipping feature with missing suburb name.\");\r\n            return { color: 'gray', weight: 1, fillOpacity: 0.1 }; // Default style for missing data\r\n        }\r\n    \r\n        const suburbData = highRentData.find(suburb => suburb.Suburb && suburb.Suburb.trim().toLowerCase() === suburbName);\r\n    \r\n        // Log matched and unmatched suburbs for better debugging\r\n        if (suburbData) {\r\n            console.log(`Match found: ${suburbName}, Rent: ${suburbData.average_rent}`);\r\n        } else {\r\n            console.log(`No match for: ${suburbName}`);\r\n        }\r\n    \r\n        const rent = suburbData ? suburbData.average_rent : 0;\r\n        return {\r\n            color: rent > 400 ? 'red' : rent > 300 ? 'orange' : 'green',\r\n            weight: 1,\r\n            fillOpacity: 0.5\r\n        };\r\n    };\r\n    \r\n    \r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', flexDirection: 'column', alignItems: 'center', gap: '20px', padding: '20px' }}>\r\n            {/* High-Sales Map */}\r\n            <div style={{ width: '80%', maxWidth: '800px', textAlign: 'center', border: '1px solid #ccc', borderRadius: '8px', overflow: 'hidden', marginBottom: '20px' }}>\r\n                <h2>Average Sales Price of Properties</h2>\r\n                <MapContainer center={center} zoom={12} style={{ height: '400px', width: '100%' }}>\r\n                    <TileLayer\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\r\n                    />\r\n                    {highSalesSuburbs.map((suburb, index) => (\r\n                        <Marker\r\n                            key={index}\r\n                            position={[suburb.coordinates.lat, suburb.coordinates.lng]}\r\n                        >\r\n                            <Popup>\r\n                                <strong>{suburb.suburb}</strong><br />\r\n                                Average Sales Price: ${suburb.average_price.toLocaleString()}\r\n                            </Popup>\r\n                        </Marker>\r\n                    ))}\r\n                </MapContainer>\r\n            </div>\r\n\r\n            {/* High-Rent Map */}\r\n            <div style={{ width: '80%', maxWidth: '800px', textAlign: 'center', border: '1px solid #ccc', borderRadius: '8px', overflow: 'hidden' }}>\r\n                <h2>Average Rent Prices by Suburb</h2>\r\n                <MapContainer center={center} zoom={10} style={{ height: '400px', width: '100%' }}>\r\n                    <TileLayer\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\r\n                    />\r\n                    {geoData && (\r\n                        <GeoJSON data={geoData} style={styleSuburb} onEachFeature={(feature, layer) => {\r\n                            const suburbName = feature.properties.name ? feature.properties.name.trim().toLowerCase() : \"\";\r\n                            const suburbData = highRentData.find(suburb => suburb.Suburb && suburb.Suburb.trim().toLowerCase() === suburbName);\r\n                            const rent = suburbData ? suburbData.average_rent : \"No data\";\r\n                            layer.bindPopup(`<strong>${suburbName}</strong><br />Average Rent: $${rent}`);\r\n                        }} />\r\n                    )}\r\n                </MapContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MarketAnalysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}